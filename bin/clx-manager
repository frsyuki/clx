#!/usr/bin/env ruby

begin
require 'rubygems'
rescue Exception
end
require 'clx/default'
require 'clx/core'
require 'clx/addr'
require 'optparse'

opt = {
	:port => CLX::MANAGER_DEFAULT_PORT,
	:addr => '<any>',
	:timer_interval => 2.0,
	:timeout_limit  => 3,
	:more_load => nil,
}

op = OptionParser.new

op.on('-p', "--port PORT=#{opt[:port]}",
			"listen port", Integer) {|i| opt[:port] = i }

op.on('-a', "--addr ADDR=#{opt[:addr]}",
			"listen address") {|s| opt[:addr] = s }

op.on('-i', "--interval SEC=#{opt[:timer_interval]}",
			"timer interval", Numeric) {|n| opt[:timer_interval] = n }

op.on('-t', "--limit LIMIT=#{opt[:timeout_limit]}",
			"timeout limit count", Integer) {|i| opt[:timeout_limit] = i }

op.on('-e', "--more-load DIR",
			"load modules") {|s| opt[:more_load] = s }

op.banner += ""

op.parse!(ARGV)

if ARGV.length != 0
	puts op.to_s
	exit 1
end


config = {
	:timer_interval => opt[:timer_interval],
	:timeout_limit  => opt[:timeout_limit],
}

core = CLX::Core.new(opt[:addr], opt[:port], config)
core.scan_module("#{CLX::MOD_DIR}/manager/*.rb")
core.scan_module("#{opt[:more_load]}/*.rb") if opt[:more_load]
core.run

